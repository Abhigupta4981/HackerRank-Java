package libraryFine;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Scanner;

public class Solution {

	public static void main(String[] args) {
		try {
			/* Instantiate a Scanner for reading standard input */
			Scanner stdIn = new Scanner(System.in);
			
			/* Define the format of the incoming date strings */
			DateTimeFormatter formatter =
					DateTimeFormatter.ofPattern("dd MM yyyy");
			
			/* Read the returned and due date strings */
			String returnedDateStr = stdIn.nextLine();
			String dueDateStr = stdIn.nextLine();
			
			/* Convert the strings to dates */
			LocalDate returnedDate = LocalDate.parse(returnedDateStr, formatter);
			LocalDate dueDate = LocalDate.parse(dueDateStr, formatter);
			 
			
			/* Define a simple date format */
			//SimpleDateFormat sdf = new SimpleDateFormat("dd MM yyyy");
			
			//String returnedDateStr = stdIn.nextLine();
			//String dueDateStr = stdIn.nextLine();
			//Date returnedDate = sdf.parse(returnedDateStr);
			//Date dueDate = sdf.parse(dueDateStr);

			System.out.printf("%s%n", returnedDate);
			System.out.printf("%s%n", dueDate);
			/*
			if (returnedDate.compareTo(dueDate) < 0) {
				System.out.println("The book was returned on time");
				System.out.println("0");
			} else {
				 The book is overdue 
				if (returnedDate.getYear() != dueDate.getYear()) {
					 Pay the yearly fine 
					System.out.println("More than a year late");
					System.out.println("10000");
				} else if (returnedDate.getMonth() != dueDate.getMonth()) {
					 Not returned in the same month 
					System.out.println((returnedDate.getMonth() - dueDate.getMonth()) + " months late");
					System.out.println(((returnedDate.getMonth() - dueDate.getMonth()) * 500));
				} else {
					 returned in the month 
					System.out.println("returnedDate: " + returnedDate.getDate() + ", dueDate: " + dueDate.getDate());
					System.out.println((returnedDate.getDate() - dueDate.getDate()) + " days late");
					System.out.println(((returnedDate.getDate() - dueDate.getDate()) * 15));
				}
			}*/
		} catch (DateTimeParseException exception) {
			System.out.println("Problems parsing date strings");
			throw exception;
		}
	}

}
