package sortingAlgorithms;

/* Perform a bubble sort on an array of integers */
public class BubbleSort {
	
	/* Define a global debug mode variable */
	public static int debug = 0;

	/* Array to be sorted */
	public int[] sortArray;

	/* Constructor for the bubble sort */
	BubbleSort(int[] sortArrayIn) {
		/* Make a copy of the data to be sorted */
		this.sortArray = sortArrayIn;
	}

	public void swapNumbers(int i, int j) {

		int temp;

		if (debug > 3) {
			System.out.println("Swapping array[" + i + "]=" + sortArray[i] + " > sortArray[" + j + "]=" + sortArray[j]);
		}

		temp = this.sortArray[i];
		this.sortArray[i] = this.sortArray[j];
		this.sortArray[j] = temp;
	}

	public void printNumbers() {

		for (int i = 0; i < this.sortArray.length; i++) {
			System.out.print(this.sortArray[i] + ", ");
		}
		System.out.println();
	}

	// logic to sort the elements
	public void sort() {
		int n = this.sortArray.length;
		int k;
		if (debug > 1) {
			System.out.println("Intermediate results");
		}
		for (int m = n; m >= 0; m--) {
			if (debug > 3) {
				System.out.println("m=" + m);
			}
			boolean swapThisPass = false;
			for (int i = 0; i < m - 1; i++) {
				k = i + 1;
				if (this.sortArray[i] > this.sortArray[k]) {
					swapNumbers(i, k);
					swapThisPass = true;
				}
				if (debug > 3) {
					System.out.print("m=" + m + ", i=" + i + ", array=");
					printNumbers();
				}
			}
			if (!swapThisPass) {
				break;
			}
			if (debug > 1) {
				printNumbers();
			}
		}
		if (debug > 1 ) {
			System.out.println();
		}
	}

}
