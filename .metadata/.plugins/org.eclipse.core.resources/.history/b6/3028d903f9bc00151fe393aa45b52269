import java.util.Scanner;

public class Solution {
	/* Define a global debug level variable */
    /* debug = -1, production mode, solution to the problem */
	/* debug = 0, normal mode, no debug output */
	/* debug = 1, print out intermediate results */
	/* debug = 2, print out detailed intermediate results */
	public static int debug = 0;
    
    /* Scanner for standard input */
	private static Scanner stdIn;
    
    /* Print the numbers in the array */
	public static void printNumbers(int[] sortArray) {

		/* Loop thru the numbers in the array */
		for (int i = 0; i < sortArray.length; i++) {
            /* If it is the first element, don't print the , */
            if (i == 0) {
                System.out.print(sortArray[i]);
            } else {
			    /* Print out the value at index i of the array */
			    System.out.print(", " + sortArray[i]);
            }
		}
		/* Skip to a new line after printing */
		System.out.println();
	}
    
    /* Swap two numbers in the sorted array */
	public static void swapNumbers(int index1, int index2, int[] sortArray) {

		int temp;

		if (debug > 1) {
			System.out.println("Swapping array[" + index1 + "]=" + sortArray[index1] + " > sortArray[" + index2 + "]="
					+ sortArray[index2]);
		}

		/* Store the first value to be swapped */
		temp = sortArray[index1];
		/* Move the second value into the first values location */
		sortArray[index1] = sortArray[index2];
		/* Put the first value into the second values location */
		sortArray[index2] = temp;
	}

    
    /* Do a selection sort on the sortArray */
	public static void sort(int[] sortArray) {
		/* Store the array length */
		int arrayLength = sortArray.length;

		if (debug > 0) {
			System.out.println("Intermediate results");
		}

		/*
		 * Scan the array from the beginning to one minus the length, inserting
		 * the smallest number in the lowest spot
		 */
		for (int startIndex = 0; startIndex < arrayLength - 1; startIndex++) {
			/* Assume the smallest index is the starting index */
			int smallerIndex = startIndex;
			/*
			 * Check for lower numbers starting at the startIndex + 1 to the end
			 */
			for (int compareIndex = startIndex + 1; compareIndex < arrayLength; compareIndex++) {
				/* Is the new number smaller */
				if (sortArray[compareIndex] < sortArray[smallerIndex]) {
					/* Save the new smallerIndex */
					smallerIndex = compareIndex;
				}
			}

			/* Has there been a change in the smallest index */
			if (smallerIndex != startIndex) {
				/* If new smaller number, then swap them */
				swapNumbers(startIndex, smallerIndex, sortArray);
			}
			if (debug > 0) {
				printNumbers(sortArray);
			}
		}
		if (debug > 0) {
			System.out.println();
		}
		return;

	}
    
    public static void main(String[] args) {
        /* Create a new instance of the Scanner to read standard input */
		stdIn = new Scanner(System.in);

        /* Read the number of numbers to be sorted */
		int numberSorted = stdIn.nextInt();
        if (debug > -1) {
            System.out.println("Reading " + numberSorted + " numbers");
        }

		/* Create a new integer array to hold the numbers to sort */
		int[] sortArray = new int[numberSorted];
		/* Read all the numbers to sort */
		for (int i = 0; i < numberSorted; i++) {
			/* Read the next number into the array */
			sortArray[i] = stdIn.nextInt();
		}
        
        /* Printout the incoming data */
        if (debug > -1) {
            System.out.println("Incoming array");
            printNumbers(sortArray);
        }
        
        /* Sort the array of numbers */
        sort(sortArray);
        
        /* Printout the sorted data */
        if (debug > -1) {
            System.out.println("Sorted array");
            printNumbers(sortArray);
        }
		
    }
}
